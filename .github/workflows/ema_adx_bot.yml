name: EMA+ADX Multi-Coin Bot (Fast Build + 15min Run)

on:
  schedule:
    - cron: "*/15 * * * *"  # every 15 minutes UTC
  workflow_dispatch:

jobs:
  run-bot:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      # 1Ô∏è‚É£ Checkout the latest code
      - name: üì• Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Cache uv dependencies (super fast)
      - name: ‚ö° Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-uv-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-uv-

      # 3Ô∏è‚É£ Set up Python
      - name: üêç Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      # 4Ô∏è‚É£ Install dependencies using uv (10x faster than pip)
      - name: üß© Install dependencies
        run: |
          pip install uv
          uv pip install -r requirements.txt

      # 5Ô∏è‚É£ Run the EMA+ADX bot (single cycle)
      - name: üöÄ Run EMA+ADX Bot
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TELEGRAM_ENABLED: true
        run: |
          echo "‚è±Ô∏è Running EMA+ADX Bot..."
          python main.py

      # 6Ô∏è‚É£ Commit updated CSV journal (if new signals found)
      - name: üíæ Commit and push journal updates
        if: success()
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

          if [ -f "signals_journal.csv" ]; then
            git add signals_journal.csv
            git commit -m "Update signals journal [skip ci]" || echo "No new signals to commit"
            git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git main || echo "No push made"
          else
            echo "No signals_journal.csv found ‚Äî skipping commit."
          fi
