name: EMA+ADX Multi-Coin Scanner

on:
  schedule:
    - cron: "*/12 * * * *"  # ‚è∞ Runs every 12 minutes (UTC)
  workflow_dispatch:          # üöÄ Allows manual trigger from GitHub UI

jobs:
  run-bot:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout repository
      - name: Checkout repo
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Setup Python
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      # 3Ô∏è‚É£ Cache pip dependencies
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # 4Ô∏è‚É£ Install dependencies (UV)
      - name: Install dependencies (UV)
        run: |
          pip install uv
          uv pip install --system -r requirements.txt

      # 5Ô∏è‚É£ Run startup test (only once per job)
      - name: Run startup system test
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          echo "üß™ Running startup system test (Telegram + CSV)..."
          python startup.py

      # 6Ô∏è‚É£ Run the main EMA+ADX strategy
      - name: Run EMA+ADX Bot
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          echo "üöÄ Running EMA+ADX Multi-Coin Scanner..."
          python main.py

      # 7Ô∏è‚É£ Commit updated signals/logs
      - name: Commit results
        if: always()
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add signals_journal.csv logs/ || true
          git commit -m "üìà Auto-update: Signals or logs from 12-min scan" || true
          git push origin main || true
